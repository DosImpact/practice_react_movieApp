{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","url","title","year","rating","image","summary","genres","className","src","alt","href","map","e","index","key","slice","App","state","isLoading","movies","getMovies","a","async","Axios","get","data","console","log","setState","cs","this","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yRAoCeA,MAhCf,YAAyE,EAAxDC,GAAyD,IAArDC,EAAoD,EAApDA,IAAKC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC7D,OACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,eAAeC,IAAKJ,EAAOH,MAAOA,EAAOQ,IAAKR,IAC7D,yBAAKM,UAAU,iBACb,yBAAKA,UAAU,gBAAgBN,GAC/B,uBAAGM,UAAU,aAAaG,KAAMV,GAC7BA,GAEH,yBAAKO,UAAU,eAAeL,GAC9B,yBAAKK,UAAU,iBAAiBJ,GAChC,wBAAII,UAAU,iBACXD,EAAOK,KAAI,SAACC,EAAGC,GAAJ,OACV,wBAAIC,IAAKD,GAAT,IAAkBD,OAGtB,yBAAKL,UAAU,kBAAkBF,EAAQU,MAAM,EAAG,UC2B3CC,E,2MA1CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IACd,6DANQ,gBAGEL,EAHF,EAERM,KACEA,KAAQN,OAKZO,QAAQC,IAAIR,GACZ,EAAKS,UAAS,SAAAC,GAAE,MAAK,CAAEX,WAAW,EAAOC,aAT/B,sC,mFAYVW,KAAKV,c,+BAGL,OAAOU,KAAKb,MAAMC,UAChB,aAEA,yBAAKX,UAAU,UACZuB,KAAKb,MAAME,OAAOR,KAAI,SAAAC,GACrB,OACE,kBAAC,EAAD,CACEb,GAAIa,EAAEb,GACNe,IAAKF,EAAEb,GACPC,IAAKY,EAAEZ,IACPC,MAAOW,EAAEX,MACTC,KAAMU,EAAEV,KACRC,OAAQS,EAAET,OACVC,MAAOQ,EAAEmB,mBACT1B,QAASO,EAAEP,QACXC,OAAQM,EAAEN,iB,GAnCN0B,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.081cfda7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Movie.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movie({ id, url, title, year, rating, image, summary, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img className=\"movie__image\" src={image} title={title} alt={title}></img>\r\n      <div className=\"movie__detail\">\r\n        <div className=\"movie__title\">{title}</div>\r\n        <a className=\"movie__url\" href={url}>\r\n          {url}\r\n        </a>\r\n        <div className=\"movie__year\">{year}</div>\r\n        <div className=\"movie__rating\">{rating}</div>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((e, index) => (\r\n            <li key={index}> {e}</li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"movie__summary\">{summary.slice(0, 1220)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nMovie.propTypes = {\r\n  id: PropTypes.number,\r\n  url: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await Axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    console.log(movies);\n    this.setState(cs => ({ isLoading: false, movies }));\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    return this.state.isLoading ? (\n      \"Loading...\"\n    ) : (\n      <div className=\"screen\">\n        {this.state.movies.map(e => {\n          return (\n            <Movie\n              id={e.id}\n              key={e.id}\n              url={e.url}\n              title={e.title}\n              year={e.year}\n              rating={e.rating}\n              image={e.medium_cover_image}\n              summary={e.summary}\n              genres={e.genres}\n            ></Movie>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}